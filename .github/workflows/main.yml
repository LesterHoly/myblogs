name: Deploy Site

on:
  push:
    branches:
      - master # only run this workflow when there's a new commit pushed to the master branch

jobs:
  deploy: # job_id
    runs-on: ubuntu-latest # environment: use ubuntu

    steps: # automated steps
      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '12'
      - name: Checkout
        uses: actions/checkout@v2
        with:
          path: myblogs
      - name: Checkout blog source code
        uses: actions/checkout@v2
        with:
          repository: LesterHoly/myHexoBlog
          token: ${{ secrets.TOKEN }}
          path: myHexoBlog
      - name: Checkout static
        uses: actions/checkout@v2
        with:
          repository: LesterHoly/myblogs_static
          token: ${{ secrets.TOKEN }}
          path: myblogs_static
      - name: Setup hexo environment
        run: |
         cd myHexoBlog/blog
          npm install -g hexo-cli
          npm install
      - name: Generate Public
        run: |
          rm -f myHexoBlog/blog/source/_posts/*.md
          cp -r myblogs/*.md myHexoBlog/blog/source/_posts/
          rm -f myHexoBlog/blog/source/_posts/README.md
          cd myHexoBlog/blog
          echo "run hexo"
          hexo clean
          hexo g
          tar -zcvf ~/release.tgz ./public
        # git config --local user.email ${{ secrets.USER_NAME }}
        # git config --local user.name ${{ secrets.EMAIL }}
        # git add --all
        # git commit -m "Update static by github bot" -a
        # git push
      # - name: Upload to release
      #   uses: JasonEtco/upload-to-release@master
      #   with:
      #     args: hello-word-${{ matrix.os }}.tar.gz application/octet-stream
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.TOKEN }}
      - name: Create Release # 创建Release，可以在仓库看到一个个版本
        id: create_release
        uses: actions/create-release@master
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }} # 之前GitHub添加的Token
        with:
          tag_name: ${{ date }} # (tag)标签名称
          release_name: Release ${{ date }}
          draft: false # 是否是草稿
          prerelease: false # 是否是预发布

    # 第四步：上传构建结果到 Release（把打包的tgz上传到Release）
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@master
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # 上传地址，通过创建Release获取到的
          asset_path: ~/release.tgz # 要上传文件
          asset_name: release.tgz # 上传后的文件名
          asset_content_type: application/x-tgz
